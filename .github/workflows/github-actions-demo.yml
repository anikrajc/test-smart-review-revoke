name: Smart Review Revoker

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

run-name: ${{ github.event.pull_request.title }} | ${{ github.event.pull_request.number }}

on:
  pull_request_review:
    types: [submitted]
  pull_request:
    branches:
      - main

jobs:
  save-pr-approved-commit-sha:
    if: github.event_name == 'pull_request_review' && github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    name: Save PR Approved Commit SHA
    steps:
      - shell: bash
        run: |
          ${{ github.event.review.commit_id }} > approved-commit-id.txt
      - name: Upload Commit ID
        uses: actions/upload-artifact@v3
        with:
          name: approved-commit-id
          path: approved-commit-id.txt

  check-if-pr-commit-is-dirty:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: Print all commits
    steps:
      - name: Download Previously Approved Commit ID
        uses: actions/download-artifact@v3
        with:
          name: approved-commit-id
      - shell: bash
        run: |
          value=`cat approved-commit-id.txt`
          echo Approved commit id $value
      # - uses: actions/checkout@v3
      #   with:
      #     fetch-depth: 2
      - name: Another step
        run: |
          echo "head_ref: ${{ github.head_ref }}"
          echo "Sha: ${{ github.sha }}"
          echo "Sha: ${{ github.sha }}"



      # - name: Get changed files using defaults
      #   id: changed-files
      #   uses: tj-actions/changed-files@v32
      # - name: List all added files
      #   run: |
      #     for file in ${{ steps.changed-files.outputs.added_files }}; do
      #       echo "$file was added"
      #     done
      # - name: Run step when a file modified
      #   run: |
      #     for file in ${{ steps.changed-files.outputs.modified_files }}; do
      #       echo "$file was modified"
      #     done
      # - name: Run step when a file deleted
      #   run: |
      #     for file in ${{ steps.changed-files.outputs.deleted_files }}; do
      #       echo "$file was deleted"
      #     done
